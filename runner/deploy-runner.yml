---
- hosts: openstack
  gather_facts: no
  become: no

  tasks:
    - name: create openstack configuration folder
      file:
        path: ~/.config/openstack
        state: directory

    - name: set vault password file
      copy:
        content: "{{ lookup('env', 'VAULT_PASSWORD') }}"
        dest: "~/.config/ansible-vault"

    - name: save clouds.yaml to ~/.config/openstack
      command: ansible-vault decrypt -v --vault-password-file ~/.config/ansible-vault clouds-yaml --output ~/.config/openstack/clouds.yaml

    - name: create a new openstack keypair
      os_keypair:
        cloud: psi-openstack
        state: present
        name: kite-key
        public_key_file: "{{ playbook_dir | dirname }}/key/identity.pub"

    - name: create security group
      os_security_group:
        cloud: psi-openstack
        name: runner
        state: present
        description: security group for github workflow runner

    - name: set ssh rule for security group lctp
      os_security_group_rule:
        cloud: psi-openstack
        security_group: runner
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: deploy instance
      os_server:
        cloud: psi-openstack
        name: kite-runner
        image: Fedora-Cloud-Base-32
        flavor: ci.w1.large
        network: provider_net_cci_5
        key_name: kite-key
        security_groups: runner
        auto_ip: yes
        wait: yes
        timeout: 600
        userdata: |
          #!/bin/bash
          dnf -y install python3-dnf
      register: instance_result

    - name: waits until instance is reachable
      wait_for:
        host: "{{ instance_result.openstack.public_v4 }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
    - name: add os instance ip into host group builder
      add_host:
        name: "{{ instance_result.openstack.public_v4 }}"
        groups: runner

- hosts: runner
  become: no

  tasks:
    - name: install runner required packages
      dnf:
        name:
          - ansible
          - python3-boto
          - python3-boto3
          - python3-openstacksdk
          - python3-passlib
          - python3-pyvmomi
          - git
          - curl
          - lttng-ust
          - openssl-libs
          - krb5-libs
          - zlib
          - libicu
        state: latest
      become: yes

    - set_fact:
        action_runner_folder: "/home/fedora/action_runner"

    - name: create action-runner folder
      file:
        path: "{{ action_runner_folder }}"
        state: directory

    - name: download action-runner scripts
      get_url:
        url: https://github.com/actions/runner/releases/download/v2.169.1/actions-runner-linux-x64-2.169.1.tar.gz
        dest: "{{ action_runner_folder }}/actions-runner-linux.tar.gz"
        validate_certs: no

    - name: extract action-runner-linux tar ball
      unarchive:
        src: "{{ action_runner_folder }}/actions-runner-linux.tar.gz"
        remote_src: yes
        dest: "{{ action_runner_folder }}"

    - name: register to github
      command: ./config.sh --url https://github.com/virt-s1/kite --token {{ runner_token }} --unattended
      args:
        chdir: "{{ action_runner_folder }}"

    - name: start runner
      shell: "{{ action_runner_folder }}/run.sh &"
      become: yes
